snippet utf
# -*- coding:utf-8 -*-
endsnippet

snippet if "simple if"
if ${1:#condition}:
    ${2:#code}
endsnippet

snippet ei  "elif"
elif ${1:#condition}:
    ${2:#code}
endsnippet

snippet el  "else"
else:
    ${1:#code}
endsnippet

snippet wh  "while"
while ${1:#condition}:
    ${2:#code}
endsnippet

snippet for "for ... in ..."
for ${1:key} in ${2:dict}:
    ${3:#code}
endsnippet

snippet ?
${1} = ${2:value} if ${3:expr} else ${4:value}
endsnippet

snippet def "def func"
def ${1:function}(${2:parameter}):
    ${3:#code}
    return ${4:#value}
endsnippet

snippet try "try...except...else"
try:
    $1
except:
    $2
else:
    $3
endsnippet

snippet finally "try...finally"
try:
    $1
finally:
    $2
endsnippet

snippet init
def __init__(self, ${1:parameter}):
    ${3:self.name = parameter}
    return ${4:#value}
endsnippet

snippet class
# 如果子类定义了构造函数，而没有调用父类构造函数
# 将不具备父类的所有属性（包括使用到父类属性的父类方法）
class ${1:name} (${2:object}):
    #def __init__(self, name):  #构造方法
        #object.__init__(self)  # 方法一
        #super($1, self).__init__() # 方法二
        #self.name = name

    $3
endsnippet

snippet lambda
lambda ${1:var} : ${2:expression}
endsnippet

snippet im
import ${1:module_name}
endsnippet

snippet from
from ${1:module} import ${2:variable}
endsnippet

snippet main
if __name__ == '__main__':
    ${1:main()}
endsnippet
###################################function#####################################

snippet pr
print(${1:string})
endsnippet

snippet input
input('${1:string}:')
endsnippet

snippet open
${1:f} = open(${2:file_name}, 'r')
#for each_line in f.readlines():
    #print (each_line)
$1.close()
endsnippet

snippet write
${1:f} = open(${2:file_name}, 'w')
$1.write(string)
$1.close()
endsnippet

snippet tk
from tkinter import ${1:Label}
#widget.pack()
#widget.mainloop()
endsnippet


#########################pyqt5#########################
snippet pyqt_widget "QWidget"
#-*- coding:utf-8 -*-
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *

class PyQt5_Temp(QWidget):
    def __init__(self):
        super(PyQt5_Temp, self).__init__()
        self.initUI()

    def initUI(self):
        self.text = QTextEdit()

        mainLayout = QVBoxLayout()
        mainLayout.addWidget(self.text)

        self.setLayout(mainLayout)

        self.setWindowTitle('PyQt5_Temp')

if __name__ == '__main__':
    import sys
    app = QApplication(sys.argv)

    ui = PyQt5_Temp()
    ui.show()
    #ui.setStyleSheet(style)
    sys.exit(app.exec_())
endsnippet
