extends verilog

snippet array "fixed width"
${1:int} name[0:${2:row}];
endsnippet

snippet array_mul "fixed width"
${1:int} name[0:${2:row}][0:${3:col}];
endsnippet

snippet queue

${1:int} ${2:name}[$] ${3:= {3,4}};

endsnippet

snippet interface
interface ${1:name}(${2:interface_signal});
${3:intenal_signal};
endinterface
endsnippet

snippet alff "combination logic" !b

endsnippet

snippet alcomb "sequential logic" !b

endsnippet

snippet allatch "D latch" !b

endsnippet

snippet enum
enum ${1:/*[optional data type]*/}
{
	${2:/*name1 = value1*/,}
} ${3:var_name};
endsnippet

snippet tde
typedef enum
{
    /*data*/,
}${1:/*struct*/}_e;
endsnippet

snippet tds
typedef /*packed*/ struct
{
    /*data*/;
}${1:/*struct*/}_s;
endsnippet

snippet tdu
typedef union
{
    /*data*/;
}${1:/*struct*/}_u;
endsnippet

snippet foreach
    foreach(${1:name}[${2:index}])
endsnippet

snippet fork
fork
	/*code_block1*/
	/*code_block2*/
join/*_any or _none*/
endsnippet

snippet class
class ${1:name};
	/*class property*/
	/*class method*/
	function new(/*parameter*/);
		/*属性初值*/
	endfunction
endclass:$1
endsnippet

