= 基础用法 =
== 语法: ==
grep [options] PATTERN [FILE...]
== 示例: == 
grep -nwHR hello /path/*.v

= Grep命令选项 =
== -? ==
    同时显示匹配行上下的？行，如：grep -2 pattern filename同时显示匹配行的上下2行。
    
== -a, --text ==
    等价于匹配text,用于（Binary file (standard input) matches）报错

== -b，--byte-offset ==

    打印匹配行前面打印该行所在的块号码。
== -c,--count ==
    只打印匹配的行数，不显示匹配的内容。
    
== -f File，--file=File ==
    从文件中提取模板。空文件中包含0个模板，所以什么都不匹配。
    
== -h，--no-filename ==
    当搜索多个文件时，不显示匹配文件名前缀。
    
== -i，--ignore-case ==
    忽略大小写差别。
    
== -q，--quiet ==
    取消显示，只返回退出状态。0则表示找到了匹配的行。
    
== -l，--files-with-matches ==
    打印匹配模板的文件清单。
    
== -L，--files-without-match ==
    打印不匹配模板的文件清单。
    
== -n，--line-number ==
    在匹配的行前面打印行号。
    
== -s，--silent ==
    不显示关于不存在或者无法读取文件的错误信息。
    
== -v，--revert-match ==
    反检索，只显示不匹配的行。
    
== -w，--word-regexp ==
    如果被\<和\>引用，就把表达式做为一个单词搜索。
    
== -R, -r, --recursive ==
    递归的读取目录下的所有文件，包括子目录。 
    比如grep -R 'pattern' test会在 test 及其子目录下的所有文件中，匹配 pattern。

== -V，--version ==
    显示软件版本信息。
