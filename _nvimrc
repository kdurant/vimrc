"1. 下载neovim，添加环境变量
"2. pip install neovim
"3. C:\Users\wj\AppData\Local\nvim\init.vim 里加载此文件   source $HOME/_nvimrc
"4. ginit.vim里修改字体     GuiFont! Monaco:h12       GuiTabline 0
"
"UpdateRemotePlugins
"

let g:is_win = has('win32') || has('win64')
let g:is_unix = has('unix')
let g:isvim = 0
let g:isnvim = 1
call plug#begin('~/nvim/bundle')
if exists("g:gui_oni")
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'ctrlpvim/ctrlp.vim'
endif
Plug 'kshenoy/vim-signature'
Plug 'SirVer/ultisnips'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'Shougo/neco-syntax',
Plug 'Shougo/neoinclude.vim'
Plug 'tpope/vim-fugitive', {'frozen': 1}
Plug 'Lokaltog/vim-easymotion'
Plug 'git@github.com:kdurant/misc_mine'
Plug 'git@github.com:kdurant/verilog-testbench'
Plug 'kdurant/AuthorInfo', {'frozen': 1}
Plug 'kdurant/nerdcommenter', {'frozen': 1}
Plug 'equalsraf/neovim-gui-shim'
Plug 'iamcco/markdown-preview.vim'
Plug 'vim-scripts/Align', {'frozen': 1}
Plug 'rking/ag.vim'
Plug 'amal-khailtash/vim-xdc-syntax'
Plug 'ianva/vim-youdao-translater'
Plug 'scrooloose/nerdtree'
Plug 'vim-scripts/ucf.vim'
"Plug 'vim-scripts/vim-do-syntax'
"Plug 'ludovicchabant/vim-gutentags'
"Plug 'skywind3000/gutentags_plus'
"Plug 'davidhalter/jedi-vim'
Plug 'vim-python/python-syntax'
"Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
"Plug 'junegunn/fzf.vim'
Plug 'liuchengxu/vim-which-key'
"Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}
"Plug 'bfredl/nvim-lspmirror'
"Plug 'shougo/deoplete-lsp'
Plug 'wsdjeg/FlyGrep.vim'

call plug#end()

if &rtp =~ 'mine'
    colorscheme james
else
    colorscheme evening
endif

set number
set mouse=a
set clipboard+=unnamed
set scrolloff=3
set linebreak
set noswapfile
set nowrap
set splitbelow
if g:is_win
    set fileformat=dos
    set fileformats=dos
elseif g:is_unix
    set fileformat=unix
    set fileformats=unix
endif
set confirm
set splitright
set cursorline

set cindent
set shiftwidth=4
set softtabstop=4
set expandtab                           " Use the appropriate number of spaces to insert a <Tab>
set autochdir
set virtualedit=block
set suffixesadd+=.v

set ignorecase
set smartcase

set completeopt+=noinsert
set completeopt-=preview

autocmd FocusGained * :checktime
autocmd BufRead,BufNewFile *.cmd set filetype=cmd
autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd BufRead,BufNewFile *.ucf set filetype=ucf
autocmd FileType lua  setlocal iskeyword+=.

autocmd BufNewFile .gitignore let @i = "#basic\n.vscode\n*.pdf\n*.doc\n*.docx\n*.rar\n*.txt\n*.html\n*.jpg\n*.chm\n*.log\n*.zip\n*.xml\ntmp\nGPATH\nGRTAGS\nGTAGS*" | exe "normal \"iP"
"let g:python_host_prg = 'python.exe'
"let g:python3_host_prog = 'C:/Users/wj/AppData/Local/Programs/Python/Python36/python.exe'
let g:python3_host_skip_check=1
let g:python3_host_prog = exepath('python')
let g:wakatime_PythonBinary = exepath('python')

"""""""""""""""""""""""""""""""""""""""""""""""""""
if g:isnvim
    if g:is_win
        source ~/PluginConfig/basic_map.vim
        source ~/PluginConfig/self_fun.vim
        source ~/PluginConfig/plugin_config.vim
        source ~/PluginConfig/plugin_map.vim
    else
        source ~/.config/nvim/PluginConfig/basic_map.vim
        source ~/.config/nvim/PluginConfig/self_fun.vim
        source ~/.config/nvim/PluginConfig/plugin_map.vim
        source ~/.config/nvim/PluginConfig/plugin_config.vim
    endif
endif

nnoremap <silent> <space> :WhichKey '<Space>'<CR>
set timeoutlen=500
call which_key#register('<Space>', "g:which_key_map")
autocmd! FileType which_key
autocmd  FileType which_key set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler
let g:which_key_map =  {}

let g:which_key_map.e = { 'name' : '+edit' }
let g:which_key_map.e.m = 'toggle comment'
let g:which_key_map.e.a = 'append comment'
let g:which_key_map.e.g = 'select all text'

let g:which_key_map.f = { 'name' : '+file' }
let g:which_key_map.f.a = 'search word in all filetype'

let g:which_key_map.w = { 'name' : '+window' }
let g:which_key_map.w.n = 'toggle nerdtree'
let g:which_key_map.w.q = 'close window'
let g:which_key_map.w.j = 'vertical inc'
let g:which_key_map.w.k = 'vertical dec'
let g:which_key_map.w.h = 'horizontal inc'
let g:which_key_map.w.l = 'horizontal dec'

let g:which_key_map.d = { 'name' : '+混合' }
let g:which_key_map.d.v = 'compile source'
let g:which_key_map.d.q = 'calc'
let g:which_key_map.d.r = 'archive git file'
