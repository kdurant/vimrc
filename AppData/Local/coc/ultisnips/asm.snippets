# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet masm "basic structure" b
assume cs: ${1:codesg}

$1 segment

start: ${2:code}

$1 ends

end
endsnippet

snippet segment "segment structure" b
${1:name} segment

${2:code}

$1 ends
endsnippet


snippet return "program return" b
mov ax,	4c00H
int 21H
endsnippet


snippet text "define text segment" b
.section    .text
.globl	_start
_start:
    $1
endsnippet

snippet data "define data segment" b
.section    .data
${1:name}:
    .${2:format} ${3:context}
endsnippet


snippet bss "define bss segment" b
.section    .bss
.${1:comm}  ${2:symbol}, ${3:len}
endsnippet

snippet fun	"att function templete" b
.type	${1:name},  @function
$1:
    pushl   %ebp
    movl    %esp,   %ebp
    $2
    movl    %ebp,   %esp
    popl    %ebp
    ret
endsnippet
